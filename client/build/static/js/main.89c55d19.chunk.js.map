{"version":3,"sources":["config/evets.ts","context/socket.context.tsx","config/default.ts","components/Intro.tsx","config/color.ts","components/Chat.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["EVENTS","connection","disconnecting","CLIENT","SEND_ROOM_MESSAGE","CREATE_ROOM","JOIN_ROOM","LEAVE_ROOM","SERVER","JOINED_ROOM","ROOMS","GUEST","ROOM_MESSAGE","socket","io","SocketContext","createContext","setUsername","setMessages","messages","rooms","useSockets","useContext","SocketsProvider","props","useState","username","setRooms","roomId","setRoomId","useEffect","window","onfocus","document","title","on","message","time","userId","hasFocus","value","Provider","Wrapper","styled","div","Error","p","InputWrapper","Title","h1","Input","input","shown","display","Or","Button","button","back","background","color","width","marginLeft","marginRight","marginTop","Intro","roomType","setRoomType","error","setError","usernameRef","useRef","roomRef","handleUsername","type","current","length","emit","roomName","localStorage","setItem","getItem","ref","placeholder","onClick","colors","main","gray","darkGray","MessageContainer","isMe","textAlign","padding","MessageWrapper","flexDirection","Message","ButtonWrapper","Header","ChatContainer","admin","ChatHeader","InputText","textarea","InputContainer","Options","PTime","Chat","newMessageRef","isNext","index","isLast","console","log","id","map","style","margin","marginBottom","rows","borderRadius","date","Date","getHours","getMinutes","file","fileUrl","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89c55d19.chunk.js","sourcesContent":["const EVENTS = {\n  connection: \"connection\",\n  disconnecting:'disconnecting',\n  CLIENT: {\n    SEND_ROOM_MESSAGE: \"SEND_ROOM_MESSAGE\",\n    CREATE_ROOM:'CREATE_ROOM',\n    JOIN_ROOM: \"JOIN_ROOM\",\n    LEAVE_ROOM:'LEAVE_ROOM'\n  },\n  SERVER: {\n    JOINED_ROOM: \"JOINED_ROOM\",\n    ROOMS:'ROOMS',\n    GUEST:'GUEST',\n    ROOM_MESSAGE: \"ROOM_MESSAGE\",\n  },\n};\n  \n  export default EVENTS;","import { createContext, useContext, useEffect, useState } from \"react\";\nimport io, {Socket} from \"socket.io-client\";\nimport { SOCKET_URL } from \"../config/default\";\nimport EVENTS from \"../config/evets\";\n\nconst socket = io(SOCKET_URL);\n\ninterface Context {\n  socket: Socket;\n  username?: string;\n  setUsername: Function;\n  messages?: { message: string; time: string; username: string, userId: string }[];\n  setMessages: Function;\n  roomId?: string;\n  rooms:object\n}\nconst SocketContext = createContext<Context>({\n  socket,\n  setUsername: () => false,\n  setMessages: () => false,\n  messages: [],\n  rooms:{}\n});\n\nfunction SocketsProvider(props: any) {\n  const [username, setUsername] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState({});\n  const [roomId, setRoomId] = useState('');\n\n  useEffect(()=>{\n   window.onfocus = ()=>{\n     document.title = 'Chat App'\n   } \n  },[]) \n  useEffect(() => {\n    socket.on(EVENTS.SERVER.ROOM_MESSAGE, ({ message, username, time, userId }) => {\n      if (!document.hasFocus()) {\n            document.title = \"New message...\";\n          }\n    setMessages((messages) => [...messages, { message, username, time, userId }]);\n  });\n}, [socket]);  \n  socket.on(EVENTS.SERVER.JOINED_ROOM, (value)=>{\n    setRoomId(value);\n    setMessages([]);\n  })\n  socket.on(EVENTS.SERVER.ROOMS, (value)=>{\n    setRooms(value);\n  })\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n        username,\n        roomId,\n        setUsername,\n        messages,\n        setMessages,\n        rooms,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport const useSockets = () => useContext(SocketContext);\n\nexport default SocketsProvider;","export const SOCKET_URL = \"http://localhost:4000\";\n","import { useSockets } from \"../context/socket.context\";\nimport styled from 'styled-components';\nimport { useEffect, useRef, useState } from \"react\";\nimport EVENTS from \"../config/evets\";\ninterface Props{\n    back?:boolean;\n    shown?:boolean;\n}\nconst Intro = () => {\n    const {socket, setUsername, rooms} = useSockets();\n    const [roomType, setRoomType] = useState<string>('');\n    const [error, setError] = useState<boolean>(false)\n    const usernameRef = useRef(null)\n    const roomRef= useRef(null)\n    useEffect(()=>{\n        if(usernameRef) usernameRef.current.value = localStorage.getItem('username') || '';\n    },[])\n    function handleUsername(type:string){\n        if(usernameRef.current?.value.length < 1){\n            setError(true);\n        }\n        else {\n            setError(false);\n            if(roomType===''){\n                setRoomType(type)\n            }\n            else if(roomType==='CREATE') {\n                const value = roomRef.current.value;\n                if(!value){\n                    return\n                }\n                socket.emit(EVENTS.CLIENT.CREATE_ROOM, {roomName:value});\n                setUsername(usernameRef.current.value);\n                localStorage.setItem('username', usernameRef.current.value);\n                usernameRef.current.value='';\n                roomRef.current.value='';\n            }\n            else if(roomType==='ENTER'){\n                const value = roomRef.current.value;\n                socket.emit(EVENTS.CLIENT.JOIN_ROOM, value);\n                localStorage.setItem('username', usernameRef.current.value);\n                setUsername(usernameRef.current.value);\n                usernameRef.current.value='';\n                roomRef.current.value='';\n            }\n    }\n    }\n    return(\n        <Wrapper>\n            <InputWrapper>\n                <Title>Welcome to Chat!</Title>\n                <Input ref={usernameRef} shown placeholder='Enter Username'/>\n                <Input ref={roomRef} shown={roomType!==''} placeholder={`Enter Room ${roomType==='CREATE' ? 'NAME' : 'ID'}`}/>\n                <Button shown={(roomType==='' || roomType==='ENTER')} onClick={()=>handleUsername('ENTER')}>Enter Room</Button>\n                <Or shown={roomType===''}>{roomType==='' && 'or'}</Or>\n                <Button shown={(roomType==='' || roomType==='CREATE')} onClick={()=>handleUsername('CREATE')}>{(roomType==='' || roomType==='CREATE') && 'Create a Room'}</Button>\n                <Button shown={roomType!==''} onClick={()=>setRoomType('')} back={true}>{roomType!=='' && 'Go Back'}</Button>\n            </InputWrapper>\n                {error && <Error>Please enter the name first!</Error>}\n        </Wrapper>\n    )\n}\n\n\n\nconst Wrapper = styled.div`\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--default);\n`\nconst Error = styled.p`\nmargin-top: 12px;\n    color:var(--red);\n`\nconst InputWrapper = styled.div`\n    width: 324px;\n    /* height: 100px; */\n    position: relative;\n    display: flex;\n    padding: 24px;\n    flex-direction: column;\n    border-radius: 8px;\n    background-color: var(--primary) ;\n`\nconst Title = styled.h1`\n    color:#fff;\n    margin-bottom: 12px;\n    width: 100%;\n    \n`\nconst Input = styled.input<Props>`\n    border:none;\n    width:  100%;\n    height: 30px;\n    margin-bottom: 12px;\n    border-radius: 8px;\n    padding: 0 12px;\n    outline: none;\n    ${props=>!props.shown && {display:'none'}}\n    transition: all 0.1s ease-in-out;\n`\nconst Or = styled.p<Props>`\n    ${props=>!props.shown && {display:'none'}}\n    transition: all 0.1s ease-in-out;\n    font-size: 14px;\n    color:#fff;\n    margin-top: 4px;\n    margin-bottom: 4px;\n`\nconst Button= styled.button<Props>`\n    border:none;\n    width: 100%;\n    height: 30px;\n    border-radius: 8px;\n    cursor: pointer;\n    ${props=>props.back && {background:'var(--red)', color:'#fff', width:'30%', marginLeft:'auto', marginRight:'auto', marginTop:'12px'}}\n    ${props=>!props.shown && {display:'none'}}\n    transition: all 0.1s ease-in-out;\n    &:hover{\n        background: ${props=>props.back ? 'var(--default)' : 'var(--hover)'};\n        color:#fff;\n    }\n`\nexport default Intro","const colors = {\n    main:'#E75818',\n    gray:'#f5f5f5',\n    darkGray:'#a1a1a1'\n}\nexport default colors","import { useSockets } from \"../context/socket.context\";\nimport styled from 'styled-components';\nimport Intro from \"./Intro\";\nimport { useRef, useState } from \"react\";\nimport EVENTS from \"../config/evets\";\nimport colors from \"../config/color\";\nimport smile from '../utils/smile.svg'\nimport clip from '../utils/clip.svg'\ninterface Props {\n    isMe?:boolean;\n    admin?:boolean;\n    isLast?:boolean;\n    shown?:boolean;\n}\n\nconst Chat = () => {\n    const {socket, username, messages, setMessages, roomId} = useSockets();\n    const newMessageRef = useRef(null);\n    const [shown, setShown] = useState(false);\n    console.log(socket.id)\n    // const scrollRef = useRef(null);\n    function handleSendMessage() {\n        const message = newMessageRef.current.value;\n        if(message==='') return\n        socket.emit(EVENTS.CLIENT.SEND_ROOM_MESSAGE, { roomId, message, username});\n    \n        const date = new Date();\n    \n        setMessages([\n          ...messages,\n          {\n            username: username,\n            message,\n            time: `${date.getHours()}:${date.getMinutes()<10 ? `0${date.getMinutes()}` : date.getMinutes()}`,\n            userId:socket.id,\n            file:false,\n            fileUrl:null\n          },\n        ]);\n    \n        newMessageRef.current.value = \"\";\n      }\n\n    function isNext(index:number) {\n        if(index===0) return true;\n        else if(messages[index-1].username!==messages[index].username) return true;\n        return false;\n    }\n    function isLast(index:number){\n        if(index===messages.length-1) return true;\n        else if(messages[index+1].username!==messages[index].username) return true;\n        return false;\n    }\n    if(!username) return <Intro/>\n    return(\n        <Wrapper>\n            <ChatContainer>\n                    <ChatHeader>\n                        <Header>Chat id: {roomId}</Header>\n                    </ChatHeader>\n                <div>\n                    {messages.map((message, index)=>{\n                        return <MessageContainer key={index} isLast={isLast(index)} isMe={message.userId===socket.id}>\n                            {isNext(index) && <p style={{margin:`8px 0`, padding:`0`}}>{message.username}</p>}\n                            <MessageWrapper isMe={message.userId===socket.id}>\n                                <Message isMe={message.userId===socket.id}>{message.message}</Message>\n                                {isLast(index) && <PTime>{message.time}</PTime>}\n                            </MessageWrapper>\n                        </MessageContainer>\n                    })}\n                </div>\n            </ChatContainer> \n            <div style={{marginBottom:8}}>  \n                <InputContainer>\n                    <InputWrapper>\n                        <div style={{display:'flex', marginBottom:16}}>\n                            <InputText placeholder='Message...' ref={newMessageRef} rows={1}/>\n                        </div>\n                        <Options>\n                            <ButtonWrapper shown={shown}>\n                                {/* <div style={{width:24, marginRight:shown ? 24 : 0, transition:'all 0.2s ease-in-out'}}><Button style={{background:' #E75818', width:24, height:24, borderRadius:12, color:'white', fontSize:16}} onClick={()=> setShown(!shown)}>{ shown ? '-' : '+' }</Button></div> */}\n                                {/* <Button style={{padding:0}} onClick={handleFileUpload}><img src={clip} alt=':)' width={16} height={16} style={{display:'flex'}}/></Button> */}\n                                {/* <Button style={{marginLeft:16, padding:0}} onClick={handleSendMessage}><img src={smile} alt=':)' width={16} height={16} style={{display:'flex'}}/></Button> */}\n                            </ButtonWrapper>\n                            <Button style={{background:' #E75818', color:'white', borderRadius:4,padding:8}} onClick={handleSendMessage}>Send</Button>\n                        </Options>\n                    </InputWrapper>\n                </InputContainer>\n            </div>\n        </Wrapper>\n    )\n}\n\nconst MessageContainer = styled.div<Props>`\n    position:relative;\n    width:100%;\n    overflow:hidden;\n    ${props=>props.isMe ? {textAlign:'right', padding:`0px 16px 4px 16px`} : {textAlign:'left', padding:'0 16px 4px 16px'}};\n`\nconst MessageWrapper = styled.div<Props>`\n    display: flex;\n    position:relative;\n    flex-wrap: wrap;\n    ${props=>props.isMe && {flexDirection:'row-reverse'}}\n    align-items: center;\n    // overflow-wrap: break-word;\n`\nconst Message = styled.p<Props>`\n    padding:8px;\n    display:block;\n    max-width:50%;\n    word-wrap:break-word;\n    white-space: normal;\n    border-radius: 8px 8px 4px 4px;\n    text-align:left;\n    background: ${props=>props.isMe ? colors.main : 'white'};\n    margin: 0;\n    ${props=>props.isMe && {color:'white'}}\n    @media screen and (max-width:480px){\n        max-width:100%;\n    }\n`\nconst ButtonWrapper = styled.div<Props>`\n    width: ${props=>props.shown ? '100%' : '24px'};\n    overflow:hidden;\n    transition:all 0.2s ease-in-out;\n    display:flex;\n    align-items: center;\n\n`\nconst Header = styled.p`\n    margin:0;\n    color:${colors.darkGray};\n    font-weight: 600;\n    font-size: 12px;\n`\nconst Wrapper = styled.div`\n    height: 100vh;\n    overflow: hidden;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`\nconst ChatContainer = styled.div<Props>`\n    position: relative;\n    max-width: 758px;\n    margin:8px;\n    height: ${props=>props.admin ? 'calc(100vh - 287px)' : 'calc(100vh - 127px)'};\n    overflow: auto;\n    background-color: ${colors.gray};\n    border-radius: 8px;\n    box-sizing: border-box;\n    @media only screen and (min-width: 712px) {\n        height: calc(100vh - 157px);   \n        max-width:${props=>!props.admin && '100%'};  \n}\n`\nconst ChatHeader = styled.div`\n    height: 42px;\n    width: 100%;\n    display: flex;\n    position: sticky;\n    top:0;\n    left: 0;\n    align-items: center;\n    justify-content: space-between;\n    padding:9px 16px;\n    border-bottom: 1px solid #16161629;\n    box-sizing: border-box;\n    background-color: ${colors.gray};\n`\nconst InputText = styled.textarea`\n    flex-grow: 1;\n    border:none;\n    outline:none;\n    padding: 16px 0;\n    resize: none;\n    line-height: 150%;\n    border-bottom: 1px solid rgba(22, 22, 22, 0.08);;\n`\nconst InputContainer = styled.div<Props>`\n    min-width: 288px;\n    max-width: 742px;\n    padding: ${props => props.admin ? '0 8px 8px 8px' : '8px'};\n    border-radius: ${props => props.admin ? '0 0 8px 8px' : '8px'};\n    margin:0 8px 0 8px;\n    background-color: #1616160A;\n    @media only screen and (min-width: 712px) {\n    padding: 8px;  \n    border-radius: 8px;\n    max-width:${props=>!props.admin && '100%'};  \n\n}\n`\nconst InputWrapper = styled.div`\n    display: block;\n    background: white;\n    padding: 4px 16px 16px 16px;\n    border-radius: 8px;\n`\nconst Options = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\nconst PTime = styled.p`\n    font-size: 9px;\n    margin: 0 8px;\n`\nconst Button = styled.button`   \n    background: none;\n    border:none;\n    outline:none;\n    cursor: pointer;\n`\nexport default Chat","import './App.css';\nimport SocketProvider from './context/socket.context'\nimport Chat from './components/Chat';\nfunction App() {\n  return (\n    <SocketProvider>\n      <div className=\"App\">\n        <Chat/>\n      </div>\n    </SocketProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}